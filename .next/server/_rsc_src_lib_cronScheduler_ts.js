"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_lib_cronScheduler_ts";
exports.ids = ["_rsc_src_lib_cronScheduler_ts"];
exports.modules = {

/***/ "(rsc)/./src/lib/cronScheduler.ts":
/*!**********************************!*\
  !*** ./src/lib/cronScheduler.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeCronJobs: () => (/* binding */ initializeCronJobs),\n/* harmony export */   triggerDailyReportManually: () => (/* binding */ triggerDailyReportManually)\n/* harmony export */ });\n/* harmony import */ var node_cron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-cron */ \"node-cron\");\n/* harmony import */ var node_cron__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_cron__WEBPACK_IMPORTED_MODULE_0__);\n// src/lib/cronScheduler.ts\n\nlet cronJobStarted = false;\nfunction initializeCronJobs() {\n    // Prevent multiple initialization\n    if (cronJobStarted) {\n        console.log('‚ö†Ô∏è Cron jobs already initialized');\n        return;\n    }\n    // Only run cron jobs in production or when explicitly enabled\n    const enableCron =  false || process.env.ENABLE_CRON === 'true';\n    if (!enableCron) {\n        console.log('üîß Cron jobs disabled for development. Set ENABLE_CRON=true to enable.');\n        return;\n    }\n    try {\n        // Schedule daily report at 12:01 AM IST\n        node_cron__WEBPACK_IMPORTED_MODULE_0___default().schedule('1 0 * * *', async ()=>{\n            console.log('üïõ Running daily WhatsApp report at:', new Date().toLocaleString('en-IN'));\n            try {\n                const baseUrl =  false ? 0 : 'http://localhost:3000';\n                const response = await fetch(`${baseUrl}/api/whatsapp/daily-report`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        ...process.env.CRON_SECRET && {\n                            'Authorization': `Bearer ${process.env.CRON_SECRET}`\n                        }\n                    }\n                });\n                const result = await response.json();\n                if (response.ok) {\n                    console.log('‚úÖ Daily report sent successfully:', result.data);\n                } else {\n                    console.error('‚ùå Failed to send daily report:', result.error);\n                }\n            } catch (error) {\n                console.error('‚ùå Error in cron job:', error);\n            }\n        }, {\n            scheduled: true,\n            timezone: \"Asia/Kolkata\"\n        });\n        cronJobStarted = true;\n        // Update the confirmation message to reflect the new time\n        console.log('‚è∞ Cron jobs initialized successfully! Daily reports scheduled for 12:01 AM IST');\n    } catch (error) {\n        console.error('‚ùå Failed to initialize cron jobs:', error);\n    }\n}\n// Manual trigger function for testing\nasync function triggerDailyReportManually() {\n    try {\n        const baseUrl =  false ? 0 : 'http://localhost:3000';\n        const response = await fetch(`${baseUrl}/api/whatsapp/daily-report`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        console.error('Manual report trigger error:', error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2Nyb25TY2hlZHVsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLDJCQUEyQjtBQUNFO0FBRTdCLElBQUlDLGlCQUFpQjtBQUVkLFNBQVNDO0lBQ2Qsa0NBQWtDO0lBQ2xDLElBQUlELGdCQUFnQjtRQUNsQkUsUUFBUUMsR0FBRyxDQUFDO1FBQ1o7SUFDRjtJQUVBLDhEQUE4RDtJQUM5RCxNQUFNQyxhQUFhQyxNQUFxQyxJQUFJQSxRQUFRQyxHQUFHLENBQUNDLFdBQVcsS0FBSztJQUV4RixJQUFJLENBQUNILFlBQVk7UUFDZkYsUUFBUUMsR0FBRyxDQUFDO1FBQ1o7SUFDRjtJQUVBLElBQUk7UUFDRix3Q0FBd0M7UUFDeENKLHlEQUFhLENBQUMsYUFBYTtZQUN6QkcsUUFBUUMsR0FBRyxDQUFDLHdDQUF3QyxJQUFJTSxPQUFPQyxjQUFjLENBQUM7WUFFOUUsSUFBSTtnQkFDRixNQUFNQyxVQUFVTixNQUFxQyxHQUNqREEsQ0FBc0IsR0FDdEI7Z0JBRUosTUFBTVEsV0FBVyxNQUFNQyxNQUFNLEdBQUdILFFBQVEsMEJBQTBCLENBQUMsRUFBRTtvQkFDbkVJLFFBQVE7b0JBQ1JDLFNBQVM7d0JBQ1AsZ0JBQWdCO3dCQUNoQixHQUFJWCxRQUFRQyxHQUFHLENBQUNXLFdBQVcsSUFBSTs0QkFDN0IsaUJBQWlCLENBQUMsT0FBTyxFQUFFWixRQUFRQyxHQUFHLENBQUNXLFdBQVcsRUFBRTt3QkFDdEQsQ0FBQztvQkFDSDtnQkFDRjtnQkFFQSxNQUFNQyxTQUFTLE1BQU1MLFNBQVNNLElBQUk7Z0JBRWxDLElBQUlOLFNBQVNPLEVBQUUsRUFBRTtvQkFDZmxCLFFBQVFDLEdBQUcsQ0FBQyxxQ0FBcUNlLE9BQU9HLElBQUk7Z0JBQzlELE9BQU87b0JBQ0xuQixRQUFRb0IsS0FBSyxDQUFDLGtDQUFrQ0osT0FBT0ksS0FBSztnQkFDOUQ7WUFDRixFQUFFLE9BQU9BLE9BQU87Z0JBQ2RwQixRQUFRb0IsS0FBSyxDQUFDLHdCQUF3QkE7WUFDeEM7UUFDRixHQUFHO1lBQ0RDLFdBQVc7WUFDWEMsVUFBVTtRQUNaO1FBRUF4QixpQkFBaUI7UUFDakIsMERBQTBEO1FBQzFERSxRQUFRQyxHQUFHLENBQUM7SUFFZCxFQUFFLE9BQU9tQixPQUFPO1FBQ2RwQixRQUFRb0IsS0FBSyxDQUFDLHFDQUFxQ0E7SUFDckQ7QUFDRjtBQUVBLHNDQUFzQztBQUMvQixlQUFlRztJQUNwQixJQUFJO1FBQ0YsTUFBTWQsVUFBVU4sTUFBcUMsR0FDakRBLENBQXNCLEdBQ3RCO1FBRUosTUFBTVEsV0FBVyxNQUFNQyxNQUFNLEdBQUdILFFBQVEsMEJBQTBCLENBQUMsRUFBRTtZQUNuRUksUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtRQUNGO1FBRUEsTUFBTUUsU0FBUyxNQUFNTCxTQUFTTSxJQUFJO1FBQ2xDLE9BQU9EO0lBQ1QsRUFBRSxPQUFPSSxPQUFPO1FBQ2RwQixRQUFRb0IsS0FBSyxDQUFDLGdDQUFnQ0E7UUFDOUMsTUFBTUE7SUFDUjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVTRVJcXERvY3VtZW50c1xcQmFyIFNob3BcXGJhci1wcm9qZWN0LVxcc3JjXFxsaWJcXGNyb25TY2hlZHVsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9jcm9uU2NoZWR1bGVyLnRzXHJcbmltcG9ydCBjcm9uIGZyb20gJ25vZGUtY3Jvbic7XHJcblxyXG5sZXQgY3JvbkpvYlN0YXJ0ZWQgPSBmYWxzZTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplQ3JvbkpvYnMoKSB7XHJcbiAgLy8gUHJldmVudCBtdWx0aXBsZSBpbml0aWFsaXphdGlvblxyXG4gIGlmIChjcm9uSm9iU3RhcnRlZCkge1xyXG4gICAgY29uc29sZS5sb2coJ+KaoO+4jyBDcm9uIGpvYnMgYWxyZWFkeSBpbml0aWFsaXplZCcpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gT25seSBydW4gY3JvbiBqb2JzIGluIHByb2R1Y3Rpb24gb3Igd2hlbiBleHBsaWNpdGx5IGVuYWJsZWRcclxuICBjb25zdCBlbmFibGVDcm9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyB8fCBwcm9jZXNzLmVudi5FTkFCTEVfQ1JPTiA9PT0gJ3RydWUnO1xyXG4gIFxyXG4gIGlmICghZW5hYmxlQ3Jvbikge1xyXG4gICAgY29uc29sZS5sb2coJ/CflKcgQ3JvbiBqb2JzIGRpc2FibGVkIGZvciBkZXZlbG9wbWVudC4gU2V0IEVOQUJMRV9DUk9OPXRydWUgdG8gZW5hYmxlLicpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIC8vIFNjaGVkdWxlIGRhaWx5IHJlcG9ydCBhdCAxMjowMSBBTSBJU1RcclxuICAgIGNyb24uc2NoZWR1bGUoJzEgMCAqICogKicsIGFzeW5jICgpID0+IHsgLy8gMTI6MDEgQU0gSVNUXHJcbiAgICAgIGNvbnNvbGUubG9nKCfwn5WbIFJ1bm5pbmcgZGFpbHkgV2hhdHNBcHAgcmVwb3J0IGF0OicsIG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoJ2VuLUlOJykpO1xyXG4gICAgICBcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyBcclxuICAgICAgICAgID8gcHJvY2Vzcy5lbnYuTkVYVEpTX1VSTCBcclxuICAgICAgICAgIDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCc7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vYXBpL3doYXRzYXBwL2RhaWx5LXJlcG9ydGAsIHtcclxuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgICAgICAuLi4ocHJvY2Vzcy5lbnYuQ1JPTl9TRUNSRVQgJiYge1xyXG4gICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3Byb2Nlc3MuZW52LkNST05fU0VDUkVUfWBcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygn4pyFIERhaWx5IHJlcG9ydCBzZW50IHN1Y2Nlc3NmdWxseTonLCByZXN1bHQuZGF0YSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBGYWlsZWQgdG8gc2VuZCBkYWlseSByZXBvcnQ6JywgcmVzdWx0LmVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGluIGNyb24gam9iOicsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBzY2hlZHVsZWQ6IHRydWUsXHJcbiAgICAgIHRpbWV6b25lOiBcIkFzaWEvS29sa2F0YVwiXHJcbiAgICB9KTtcclxuXHJcbiAgICBjcm9uSm9iU3RhcnRlZCA9IHRydWU7XHJcbiAgICAvLyBVcGRhdGUgdGhlIGNvbmZpcm1hdGlvbiBtZXNzYWdlIHRvIHJlZmxlY3QgdGhlIG5ldyB0aW1lXHJcbiAgICBjb25zb2xlLmxvZygn4o+wIENyb24gam9icyBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHkhIERhaWx5IHJlcG9ydHMgc2NoZWR1bGVkIGZvciAxMjowMSBBTSBJU1QnKTtcclxuICAgIFxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRmFpbGVkIHRvIGluaXRpYWxpemUgY3JvbiBqb2JzOicsIGVycm9yKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIE1hbnVhbCB0cmlnZ2VyIGZ1bmN0aW9uIGZvciB0ZXN0aW5nXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0cmlnZ2VyRGFpbHlSZXBvcnRNYW51YWxseSgpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgXHJcbiAgICAgID8gcHJvY2Vzcy5lbnYuTkVYVEpTX1VSTCBcclxuICAgICAgOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwJztcclxuICAgICAgXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke2Jhc2VVcmx9L2FwaS93aGF0c2FwcC9kYWlseS1yZXBvcnRgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignTWFudWFsIHJlcG9ydCB0cmlnZ2VyIGVycm9yOicsIGVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJjcm9uIiwiY3JvbkpvYlN0YXJ0ZWQiLCJpbml0aWFsaXplQ3JvbkpvYnMiLCJjb25zb2xlIiwibG9nIiwiZW5hYmxlQ3JvbiIsInByb2Nlc3MiLCJlbnYiLCJFTkFCTEVfQ1JPTiIsInNjaGVkdWxlIiwiRGF0ZSIsInRvTG9jYWxlU3RyaW5nIiwiYmFzZVVybCIsIk5FWFRKU19VUkwiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsIkNST05fU0VDUkVUIiwicmVzdWx0IiwianNvbiIsIm9rIiwiZGF0YSIsImVycm9yIiwic2NoZWR1bGVkIiwidGltZXpvbmUiLCJ0cmlnZ2VyRGFpbHlSZXBvcnRNYW51YWxseSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cronScheduler.ts\n");

/***/ })

};
;