"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_lib_cronScheduler_ts";
exports.ids = ["_rsc_src_lib_cronScheduler_ts"];
exports.modules = {

/***/ "(rsc)/./src/lib/cronScheduler.ts":
/*!**********************************!*\
  !*** ./src/lib/cronScheduler.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeCronJobs: () => (/* binding */ initializeCronJobs)\n/* harmony export */ });\n/* harmony import */ var node_cron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-cron */ \"node-cron\");\n/* harmony import */ var node_cron__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_cron__WEBPACK_IMPORTED_MODULE_0__);\n\nlet cronJobStarted = false;\nfunction initializeCronJobs() {\n    // Prevent multiple initialization\n    if (cronJobStarted) {\n        console.log('‚ö†Ô∏è Cron jobs already initialized');\n        return;\n    }\n    // Only run cron jobs in production or when explicitly enabled\n    const enableCron =  false || process.env.ENABLE_CRON === 'true';\n    if (!enableCron) {\n        console.log('üîß Cron jobs disabled for development. Set ENABLE_CRON=true to enable.');\n        return;\n    }\n    try {\n        // Schedule daily report at 10:31 AM IST\n        node_cron__WEBPACK_IMPORTED_MODULE_0___default().schedule('35 10 * * *', async ()=>{\n            console.log('üïõ Running daily WhatsApp report at:', new Date().toLocaleString('en-IN'));\n            try {\n                const baseUrl =  false ? 0 : 'http://localhost:3000';\n                const response = await fetch(`${baseUrl}/api/whatsapp/daily-report`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        ...process.env.CRON_SECRET && {\n                            'Authorization': `Bearer ${process.env.CRON_SECRET}`\n                        }\n                    }\n                });\n                const result = await response.json();\n                if (response.ok) {\n                    console.log('‚úÖ Daily report sent successfully:', result);\n                } else {\n                    console.error('‚ùå Failed to send daily report:', result.error);\n                }\n            } catch (error) {\n                console.error('‚ùå Error in cron job:', error);\n            }\n        }, {\n            scheduled: true,\n            timezone: \"Asia/Kolkata\"\n        });\n        cronJobStarted = true;\n        // Update the confirmation message\n        console.log('‚è∞ Cron jobs initialized successfully! Daily reports scheduled for 10:32 AM IST');\n    } catch (error) {\n        console.error('‚ùå Failed to initialize cron jobs:', error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2Nyb25TY2hlZHVsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZCO0FBRTdCLElBQUlDLGlCQUFpQjtBQUVkLFNBQVNDO0lBQ2Qsa0NBQWtDO0lBQ2xDLElBQUlELGdCQUFnQjtRQUNsQkUsUUFBUUMsR0FBRyxDQUFDO1FBQ1o7SUFDRjtJQUVBLDhEQUE4RDtJQUM5RCxNQUFNQyxhQUFhQyxNQUFxQyxJQUFJQSxRQUFRQyxHQUFHLENBQUNDLFdBQVcsS0FBSztJQUV4RixJQUFJLENBQUNILFlBQVk7UUFDZkYsUUFBUUMsR0FBRyxDQUFDO1FBQ1o7SUFDRjtJQUVBLElBQUk7UUFDRix3Q0FBd0M7UUFDeENKLHlEQUFhLENBQUMsZUFBZTtZQUMzQkcsUUFBUUMsR0FBRyxDQUFDLHdDQUF3QyxJQUFJTSxPQUFPQyxjQUFjLENBQUM7WUFFOUUsSUFBSTtnQkFDRixNQUFNQyxVQUFVTixNQUFxQyxHQUNqREEsQ0FBc0IsR0FDdEI7Z0JBRUosTUFBTVEsV0FBVyxNQUFNQyxNQUFNLEdBQUdILFFBQVEsMEJBQTBCLENBQUMsRUFBRTtvQkFDbkVJLFFBQVE7b0JBQ1JDLFNBQVM7d0JBQ1AsZ0JBQWdCO3dCQUNoQixHQUFJWCxRQUFRQyxHQUFHLENBQUNXLFdBQVcsSUFBSTs0QkFDN0IsaUJBQWlCLENBQUMsT0FBTyxFQUFFWixRQUFRQyxHQUFHLENBQUNXLFdBQVcsRUFBRTt3QkFDdEQsQ0FBQztvQkFDSDtnQkFDRjtnQkFFQSxNQUFNQyxTQUFTLE1BQU1MLFNBQVNNLElBQUk7Z0JBRWxDLElBQUlOLFNBQVNPLEVBQUUsRUFBRTtvQkFDZmxCLFFBQVFDLEdBQUcsQ0FBQyxxQ0FBcUNlO2dCQUNuRCxPQUFPO29CQUNMaEIsUUFBUW1CLEtBQUssQ0FBQyxrQ0FBa0NILE9BQU9HLEtBQUs7Z0JBQzlEO1lBQ0YsRUFBRSxPQUFPQSxPQUFPO2dCQUNkbkIsUUFBUW1CLEtBQUssQ0FBQyx3QkFBd0JBO1lBQ3hDO1FBQ0YsR0FBRztZQUNEQyxXQUFXO1lBQ1hDLFVBQVU7UUFDWjtRQUVBdkIsaUJBQWlCO1FBQ2pCLGtDQUFrQztRQUNsQ0UsUUFBUUMsR0FBRyxDQUFDO0lBRWQsRUFBRSxPQUFPa0IsT0FBTztRQUNkbkIsUUFBUW1CLEtBQUssQ0FBQyxxQ0FBcUNBO0lBQ3JEO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRG9jdW1lbnRzXFxiYXItcHJvamVjdC1cXHNyY1xcbGliXFxjcm9uU2NoZWR1bGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcm9uIGZyb20gJ25vZGUtY3Jvbic7XHJcblxyXG5sZXQgY3JvbkpvYlN0YXJ0ZWQgPSBmYWxzZTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplQ3JvbkpvYnMoKSB7XHJcbiAgLy8gUHJldmVudCBtdWx0aXBsZSBpbml0aWFsaXphdGlvblxyXG4gIGlmIChjcm9uSm9iU3RhcnRlZCkge1xyXG4gICAgY29uc29sZS5sb2coJ+KaoO+4jyBDcm9uIGpvYnMgYWxyZWFkeSBpbml0aWFsaXplZCcpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gT25seSBydW4gY3JvbiBqb2JzIGluIHByb2R1Y3Rpb24gb3Igd2hlbiBleHBsaWNpdGx5IGVuYWJsZWRcclxuICBjb25zdCBlbmFibGVDcm9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyB8fCBwcm9jZXNzLmVudi5FTkFCTEVfQ1JPTiA9PT0gJ3RydWUnO1xyXG4gIFxyXG4gIGlmICghZW5hYmxlQ3Jvbikge1xyXG4gICAgY29uc29sZS5sb2coJ/CflKcgQ3JvbiBqb2JzIGRpc2FibGVkIGZvciBkZXZlbG9wbWVudC4gU2V0IEVOQUJMRV9DUk9OPXRydWUgdG8gZW5hYmxlLicpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIC8vIFNjaGVkdWxlIGRhaWx5IHJlcG9ydCBhdCAxMDozMSBBTSBJU1RcclxuICAgIGNyb24uc2NoZWR1bGUoJzM1IDEwICogKiAqJywgYXN5bmMgKCkgPT4geyAvLyA8LS0gVEhJUyBMSU5FIElTIENIQU5HRURcclxuICAgICAgY29uc29sZS5sb2coJ/CflZsgUnVubmluZyBkYWlseSBXaGF0c0FwcCByZXBvcnQgYXQ6JywgbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygnZW4tSU4nKSk7XHJcbiAgICAgIFxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGJhc2VVcmwgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIFxyXG4gICAgICAgICAgPyBwcm9jZXNzLmVudi5ORVhUSlNfVVJMIFxyXG4gICAgICAgICAgOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwJztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtiYXNlVXJsfS9hcGkvd2hhdHNhcHAvZGFpbHktcmVwb3J0YCwge1xyXG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgICAgIC4uLihwcm9jZXNzLmVudi5DUk9OX1NFQ1JFVCAmJiB7XHJcbiAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7cHJvY2Vzcy5lbnYuQ1JPTl9TRUNSRVR9YFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCfinIUgRGFpbHkgcmVwb3J0IHNlbnQgc3VjY2Vzc2Z1bGx5OicsIHJlc3VsdCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBGYWlsZWQgdG8gc2VuZCBkYWlseSByZXBvcnQ6JywgcmVzdWx0LmVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGluIGNyb24gam9iOicsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBzY2hlZHVsZWQ6IHRydWUsXHJcbiAgICAgIHRpbWV6b25lOiBcIkFzaWEvS29sa2F0YVwiXHJcbiAgICB9KTtcclxuXHJcbiAgICBjcm9uSm9iU3RhcnRlZCA9IHRydWU7XHJcbiAgICAvLyBVcGRhdGUgdGhlIGNvbmZpcm1hdGlvbiBtZXNzYWdlXHJcbiAgICBjb25zb2xlLmxvZygn4o+wIENyb24gam9icyBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHkhIERhaWx5IHJlcG9ydHMgc2NoZWR1bGVkIGZvciAxMDozMiBBTSBJU1QnKTtcclxuICAgIFxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRmFpbGVkIHRvIGluaXRpYWxpemUgY3JvbiBqb2JzOicsIGVycm9yKTtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiY3JvbiIsImNyb25Kb2JTdGFydGVkIiwiaW5pdGlhbGl6ZUNyb25Kb2JzIiwiY29uc29sZSIsImxvZyIsImVuYWJsZUNyb24iLCJwcm9jZXNzIiwiZW52IiwiRU5BQkxFX0NST04iLCJzY2hlZHVsZSIsIkRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsImJhc2VVcmwiLCJORVhUSlNfVVJMIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJDUk9OX1NFQ1JFVCIsInJlc3VsdCIsImpzb24iLCJvayIsImVycm9yIiwic2NoZWR1bGVkIiwidGltZXpvbmUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cronScheduler.ts\n");

/***/ })

};
;