"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_lib_cronScheduler_ts";
exports.ids = ["_rsc_src_lib_cronScheduler_ts"];
exports.modules = {

/***/ "(rsc)/./src/lib/cronScheduler.ts":
/*!**********************************!*\
  !*** ./src/lib/cronScheduler.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeCronJobs: () => (/* binding */ initializeCronJobs),\n/* harmony export */   triggerDailyReportManually: () => (/* binding */ triggerDailyReportManually)\n/* harmony export */ });\n/* harmony import */ var node_cron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-cron */ \"node-cron\");\n/* harmony import */ var node_cron__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_cron__WEBPACK_IMPORTED_MODULE_0__);\n// src/lib/cronScheduler.ts\n\nlet cronJobStarted = false;\nfunction initializeCronJobs() {\n    // Prevent multiple initialization\n    if (cronJobStarted) {\n        console.log('‚ö†Ô∏è Cron jobs already initialized');\n        return;\n    }\n    // Only run cron jobs in production or when explicitly enable\n    const enableCron =  false || process.env.ENABLE_CRON === 'true';\n    if (!enableCron) {\n        console.log('üîß Cron jobs disabled for development. Set ENABLE_CRON=true to enable.');\n        return;\n    }\n    try {\n        // Schedule daily report at 12:01 AM IST\n        node_cron__WEBPACK_IMPORTED_MODULE_0___default().schedule('1 0 * * *', async ()=>{\n            console.log('üïõ Running daily WhatsApp report at:', new Date().toLocaleString('en-IN'));\n            try {\n                const baseUrl =  false ? 0 : 'http://localhost:3000';\n                const response = await fetch(`${baseUrl}/api/whatsapp/daily-report`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        ...process.env.CRON_SECRET && {\n                            'Authorization': `Bearer ${process.env.CRON_SECRET}`\n                        }\n                    }\n                });\n                const result = await response.json();\n                if (response.ok) {\n                    console.log('‚úÖ Daily report sent successfully:', result.data);\n                } else {\n                    console.error('‚ùå Failed to send daily report:', result.error);\n                }\n            } catch (error) {\n                console.error('‚ùå Error in cron job:', error);\n            }\n        }, {\n            scheduled: true,\n            timezone: \"Asia/Kolkata\"\n        });\n        cronJobStarted = true;\n        // Update the confirmation message to reflect the new time\n        console.log('‚è∞ Cron jobs initialized successfully! Daily reports scheduled for 12:01 AM IST');\n    } catch (error) {\n        console.error('‚ùå Failed to initialize cron jobs:', error);\n    }\n}\n// Manual trigger function for testing\nasync function triggerDailyReportManually() {\n    try {\n        const baseUrl =  false ? 0 : 'http://localhost:3000';\n        const response = await fetch(`${baseUrl}/api/whatsapp/daily-report`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        console.error('Manual report trigger error:', error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2Nyb25TY2hlZHVsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLDJCQUEyQjtBQUNFO0FBRTdCLElBQUlDLGlCQUFpQjtBQUVkLFNBQVNDO0lBQ2Qsa0NBQWtDO0lBQ2xDLElBQUlELGdCQUFnQjtRQUNsQkUsUUFBUUMsR0FBRyxDQUFDO1FBQ1o7SUFDRjtJQUVBLDZEQUE2RDtJQUM3RCxNQUFNQyxhQUFhQyxNQUFxQyxJQUFJQSxRQUFRQyxHQUFHLENBQUNDLFdBQVcsS0FBSztJQUV4RixJQUFJLENBQUNILFlBQVk7UUFDZkYsUUFBUUMsR0FBRyxDQUFDO1FBQ1o7SUFDRjtJQUVBLElBQUk7UUFDRix3Q0FBd0M7UUFDeENKLHlEQUFhLENBQUMsYUFBYTtZQUN6QkcsUUFBUUMsR0FBRyxDQUFDLHdDQUF3QyxJQUFJTSxPQUFPQyxjQUFjLENBQUM7WUFFOUUsSUFBSTtnQkFDRixNQUFNQyxVQUFVTixNQUFxQyxHQUNqREEsQ0FBc0IsR0FDdEI7Z0JBRUosTUFBTVEsV0FBVyxNQUFNQyxNQUFNLEdBQUdILFFBQVEsMEJBQTBCLENBQUMsRUFBRTtvQkFDbkVJLFFBQVE7b0JBQ1JDLFNBQVM7d0JBQ1AsZ0JBQWdCO3dCQUNoQixHQUFJWCxRQUFRQyxHQUFHLENBQUNXLFdBQVcsSUFBSTs0QkFDN0IsaUJBQWlCLENBQUMsT0FBTyxFQUFFWixRQUFRQyxHQUFHLENBQUNXLFdBQVcsRUFBRTt3QkFDdEQsQ0FBQztvQkFDSDtnQkFDRjtnQkFFQSxNQUFNQyxTQUFTLE1BQU1MLFNBQVNNLElBQUk7Z0JBRWxDLElBQUlOLFNBQVNPLEVBQUUsRUFBRTtvQkFDZmxCLFFBQVFDLEdBQUcsQ0FBQyxxQ0FBcUNlLE9BQU9HLElBQUk7Z0JBQzlELE9BQU87b0JBQ0xuQixRQUFRb0IsS0FBSyxDQUFDLGtDQUFrQ0osT0FBT0ksS0FBSztnQkFDOUQ7WUFDRixFQUFFLE9BQU9BLE9BQU87Z0JBQ2RwQixRQUFRb0IsS0FBSyxDQUFDLHdCQUF3QkE7WUFDeEM7UUFDRixHQUFHO1lBQ0RDLFdBQVc7WUFDWEMsVUFBVTtRQUNaO1FBRUF4QixpQkFBaUI7UUFDakIsMERBQTBEO1FBQzFERSxRQUFRQyxHQUFHLENBQUM7SUFFZCxFQUFFLE9BQU9tQixPQUFPO1FBQ2RwQixRQUFRb0IsS0FBSyxDQUFDLHFDQUFxQ0E7SUFDckQ7QUFDRjtBQUVBLHNDQUFzQztBQUMvQixlQUFlRztJQUNwQixJQUFJO1FBQ0YsTUFBTWQsVUFBVU4sTUFBcUMsR0FDakRBLENBQXNCLEdBQ3RCO1FBRUosTUFBTVEsV0FBVyxNQUFNQyxNQUFNLEdBQUdILFFBQVEsMEJBQTBCLENBQUMsRUFBRTtZQUNuRUksUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtRQUNGO1FBRUEsTUFBTUUsU0FBUyxNQUFNTCxTQUFTTSxJQUFJO1FBQ2xDLE9BQU9EO0lBQ1QsRUFBRSxPQUFPSSxPQUFPO1FBQ2RwQixRQUFRb0IsS0FBSyxDQUFDLGdDQUFnQ0E7UUFDOUMsTUFBTUE7SUFDUjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVTRVJcXERvY3VtZW50c1xcQmFyIFNob3BcXGJhci1wcm9qZWN0LVxcc3JjXFxsaWJcXGNyb25TY2hlZHVsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9jcm9uU2NoZWR1bGVyLnRzXHJcbmltcG9ydCBjcm9uIGZyb20gJ25vZGUtY3Jvbic7XHJcblxyXG5sZXQgY3JvbkpvYlN0YXJ0ZWQgPSBmYWxzZTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplQ3JvbkpvYnMoKSB7XHJcbiAgLy8gUHJldmVudCBtdWx0aXBsZSBpbml0aWFsaXphdGlvblxyXG4gIGlmIChjcm9uSm9iU3RhcnRlZCkge1xyXG4gICAgY29uc29sZS5sb2coJ+KaoO+4jyBDcm9uIGpvYnMgYWxyZWFkeSBpbml0aWFsaXplZCcpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gT25seSBydW4gY3JvbiBqb2JzIGluIHByb2R1Y3Rpb24gb3Igd2hlbiBleHBsaWNpdGx5IGVuYWJsZVxyXG4gIGNvbnN0IGVuYWJsZUNyb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIHx8IHByb2Nlc3MuZW52LkVOQUJMRV9DUk9OID09PSAndHJ1ZSc7XHJcbiAgXHJcbiAgaWYgKCFlbmFibGVDcm9uKSB7XHJcbiAgICBjb25zb2xlLmxvZygn8J+UpyBDcm9uIGpvYnMgZGlzYWJsZWQgZm9yIGRldmVsb3BtZW50LiBTZXQgRU5BQkxFX0NST049dHJ1ZSB0byBlbmFibGUuJyk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgLy8gU2NoZWR1bGUgZGFpbHkgcmVwb3J0IGF0IDEyOjAxIEFNIElTVFxyXG4gICAgY3Jvbi5zY2hlZHVsZSgnMSAwICogKiAqJywgYXN5bmMgKCkgPT4geyAvLyAxMjowMSBBTSBJU1RcclxuICAgICAgY29uc29sZS5sb2coJ/CflZsgUnVubmluZyBkYWlseSBXaGF0c0FwcCByZXBvcnQgYXQ6JywgbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygnZW4tSU4nKSk7XHJcbiAgICAgIFxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGJhc2VVcmwgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIFxyXG4gICAgICAgICAgPyBwcm9jZXNzLmVudi5ORVhUSlNfVVJMIFxyXG4gICAgICAgICAgOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwJztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtiYXNlVXJsfS9hcGkvd2hhdHNhcHAvZGFpbHktcmVwb3J0YCwge1xyXG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgICAgIC4uLihwcm9jZXNzLmVudi5DUk9OX1NFQ1JFVCAmJiB7XHJcbiAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7cHJvY2Vzcy5lbnYuQ1JPTl9TRUNSRVR9YFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCfinIUgRGFpbHkgcmVwb3J0IHNlbnQgc3VjY2Vzc2Z1bGx5OicsIHJlc3VsdC5kYXRhKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEZhaWxlZCB0byBzZW5kIGRhaWx5IHJlcG9ydDonLCByZXN1bHQuZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCfinYwgRXJyb3IgaW4gY3JvbiBqb2I6JywgZXJyb3IpO1xyXG4gICAgICB9XHJcbiAgICB9LCB7XHJcbiAgICAgIHNjaGVkdWxlZDogdHJ1ZSxcclxuICAgICAgdGltZXpvbmU6IFwiQXNpYS9Lb2xrYXRhXCJcclxuICAgIH0pO1xyXG5cclxuICAgIGNyb25Kb2JTdGFydGVkID0gdHJ1ZTtcclxuICAgIC8vIFVwZGF0ZSB0aGUgY29uZmlybWF0aW9uIG1lc3NhZ2UgdG8gcmVmbGVjdCB0aGUgbmV3IHRpbWVcclxuICAgIGNvbnNvbGUubG9nKCfij7AgQ3JvbiBqb2JzIGluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSEgRGFpbHkgcmVwb3J0cyBzY2hlZHVsZWQgZm9yIDEyOjAxIEFNIElTVCcpO1xyXG4gICAgXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBGYWlsZWQgdG8gaW5pdGlhbGl6ZSBjcm9uIGpvYnM6JywgZXJyb3IpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gTWFudWFsIHRyaWdnZXIgZnVuY3Rpb24gZm9yIHRlc3RpbmdcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRyaWdnZXJEYWlseVJlcG9ydE1hbnVhbGx5KCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyBcclxuICAgICAgPyBwcm9jZXNzLmVudi5ORVhUSlNfVVJMIFxyXG4gICAgICA6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAnO1xyXG4gICAgICBcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vYXBpL3doYXRzYXBwL2RhaWx5LXJlcG9ydGAsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdNYW51YWwgcmVwb3J0IHRyaWdnZXIgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgdGhyb3cgZXJyb3I7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbImNyb24iLCJjcm9uSm9iU3RhcnRlZCIsImluaXRpYWxpemVDcm9uSm9icyIsImNvbnNvbGUiLCJsb2ciLCJlbmFibGVDcm9uIiwicHJvY2VzcyIsImVudiIsIkVOQUJMRV9DUk9OIiwic2NoZWR1bGUiLCJEYXRlIiwidG9Mb2NhbGVTdHJpbmciLCJiYXNlVXJsIiwiTkVYVEpTX1VSTCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQ1JPTl9TRUNSRVQiLCJyZXN1bHQiLCJqc29uIiwib2siLCJkYXRhIiwiZXJyb3IiLCJzY2hlZHVsZWQiLCJ0aW1lem9uZSIsInRyaWdnZXJEYWlseVJlcG9ydE1hbnVhbGx5Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cronScheduler.ts\n");

/***/ })

};
;